************************************** (Self review: Practice using companion objects) *****************************************

Question 1) What was the output when you ran your solution? 
            1.33
            1.5
            1.8

Question 2) What is the output of the program if you add another OrderItem in the list – Ice cream (4$)?
            1.805
            1.71
            1.9


Question 3) How can you call a function fun sayHello() defined within a companion object of a class ‘Greeting’? 
            Greeting().sayHello()
            Greeting.sayHello()


//////////ANSWER////////////


Question 1) 1.33
Question 2) 1.71
Question 3) Greeting.sayHello()




********************Self review: Implementing start function in an Activity*****************************************************

Question 1) In the companion object of IngredientsActivity, you have a start function. In that function, you initialize an Intent. Which of the following calls did you use?
            val intent = Intent(context, IngredientsActivity::class.java)
            val intent = Intent(IngredientsActivity::class.java , context)
            val intent = Intent(context, IngredientsActivity::class)


Question 2) In the onCreate function of the IngredientsActivity class, replace the Pasta string with Pizza. Run the code and tap the Pasta button. What happens?
            IngredientsActivity launches with the ingredients for a pizza
            IngredientsActivity no longer launches.
            IngredientsActivity launches with Unknown dish


Question 3) Which of the following will start IngredientsActivity from MainActivity?   Select all that apply.
            startActivity(Intent(this, IngredientsActivity::class.java))
            IngredientsActivity.start(this, “Pasta”)
            startActivity(IngredientsActivity)


//////////ANSWER////////////



Question 1).  val intent = Intent(context, IngredientsActivity::class.java)
Question 2).  IngredientsActivity launches with Unknown dish
Question 3).  startActivity(Intent(this, IngredientsActivity::class.java))
              IngredientsActivity.start(this, “Pasta”)





************************************** (Knowledge check: Object declaration) ****************************************************


Question 1) RestaurantMenu is a Kotlin object with a mutable list. Which of the following statements is true? Select all that apply.  
            Adding the same element from activity A or from activity B will lead to different results.
            An element added to the list from activity A will be accessible from activity B
            Clearing the list from activity A will clear the list for activity B as well.
            An element added to the list from activity A will not be accessible from activity B


Question 2) Little Lemon has only one restaurant. Which entity would best represent it?
            Object
            Interface
            List
            Class


Question 3) Which of the following statements about companion objects are correct?
            You can have multiple companion objects per class
            Companion objects can belong to multiple classes
            A companion object is a singleton
            You must add a companion object for each class



//////////ANSWER////////////



Question 1).  An element added to the list from activity A will be accessible from activity B
              Clearing the list from activity A will clear the list for activity B as well.
Question 2).  Object
Question 3).  A companion object is a singleton




************************************** (Module quiz: Kotlin and Android) ****************************************************


Question 1) Which option demonstrates the correct way to initialize an object in Kotlin? 
            object CustomObject( )
            object CustomObject { }
            object CustomObject( ) { }


Question 2) Which option represents the correct way to call the function getNumberOfWheels defined in the object below:
1 object Car { fun getNumberOfWheels() = 4} 
2 object Car {
3  fun getNumberOfWheels() = 4
4 }
            println(Car.getNumberOfWheels)
            println(Car.getNumberOfWheels())
            println(Car().getNumberOfWheels())


Question 3) What is the correct syntax to call the function printHello defined in the code below:
1 class Outer {    class Nested {        fun printHello() {            println("Hello")        }    }}
2 class Outer {
3     class Nested {
4         fun printHello() {
5             println("Hello")
6         }
7     }
8 }
           Outer.Nested().printHello()
           Outer().Nested().printHello()
           Nested().printHello()

Question 4) What is the correct syntax to call the function printHello defined in the code below:
1 class Outer {    inner class Inner {        fun printHello() {            println("Hello")        }    }} 
2 class Outer {
3     inner class Inner {
4         fun printHello() {
5             println("Hello")
6         }
7     }
8 }
           Outer().Inner().printHello()
           Outer.Inner().printHello()
           Inner().printHello()


Question 5) Which of these are correct ways to access the variable wheelCount in the code below:
1 class Car {    companion object {        val wheelCount = 4    }} 
2 class Car {
3     companion object {
4         val wheelCount = 4
5     }
6 }
            Car.Companion.wheelCount
            Car.companion.wheelCount
            Car().wheelCount
            Car.wheelCount


Question 6) When should you use a companion object in a class?
            To define members that should not be accessible outside the class
            To define members that should be accessible without an object of a class and only using the class name
            To define members that should be accessible by an object of a class


Question 7) Which of the following keywords is used to declare a constant in Kotlin?
            constant
            const
            final


Question 8) Which of these is correct if you wish to navigate from an activity called SourceActivity to another activity called  DestinationActivity in Android? 
(Assume that the Context object can be referenced using context and an instance of SourceActivity can be referenced as sourceActivity)
            val intent = Intent(SourceActivity::class.java, DestinationActivity::class.java)
            val intent = Intent(DestinationActivity::class.java, sourceActivity)
            val intent = Intent(context, DestinationActivity::class.java)
            val intent = Intent(sourceActivity, DestinationActivity::class.java)


Question 9) What is the right way to use the function startActivity to start an activity? 
            startActivity(context, intent) 
            context.startActivity(intent)
            Activity.startActivity(intent)


Question 10) Which one of the below lines can you use to pass an argument to an activity? (Assume an instance of Intent can be referenced using intent variable)
             intent.getExtra(“message”, “hello”)
             intent.putExtra(“hello”)
             intent.putExtra(“message”, “hello”)



//////////ANSWER////////////



Question 1).  object CustomObject { }
Question 2).  println(Car.getNumberOfWheels())
Question 3).  Outer.Nested().printHello()
Question 4).  Outer().Inner().printHello()
Question 5).  Car.Companion.wheelCount
              Car.wheelCount
Question 6).  To define members that should be accessible without an object of a class and only using the class name
Question 7).  const
Question 8).  val intent = Intent(context, DestinationActivity::class.java)
              val intent = Intent(sourceActivity, DestinationActivity::class.java)
Question 9).  context.startActivity(intent)
Question 10). intent.putExtra(“message”, “hello”) 




































